{
  "src/lib/components/DashChartEditor.react.js": {
    "description": "",
    "displayName": "DashChartEditor",
    "methods": [
      {
        "name": "loadFigure",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "figure",
            "type": null
          },
          {
            "name": "bypass",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "saveState",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "updateOptions",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{data, layout, frames}",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Dash prop to be registered for use with callbacks"
      },
      "dataSources": {
        "type": {
          "name": "objectOf",
          "value": {
            "name": "array"
          }
        },
        "required": false,
        "description": "Input dataSources for driving the chart editors selections"
      },
      "figure": {
        "type": {
          "name": "exact",
          "value": {
            "data": {
              "name": "arrayOf",
              "value": {
                "name": "object"
              },
              "description": "Output data of the chart editor",
              "required": false
            },
            "layout": {
              "name": "object",
              "description": "Output layout of the chart editor",
              "required": false
            },
            "frames": {
              "name": "array",
              "description": "Output frames of the chart editor",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Output figure of the chart editor (dcc.Graph esk output)"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "style of the whole editing element, including charting area",
        "defaultValue": {
          "value": "{width: '100%', height: '100%'}",
          "computed": false
        }
      },
      "config": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Plotly config options, listed here: https://github.com/plotly/plotly.js/blob/master/src/plot_api/plot_config.js",
        "defaultValue": {
          "value": "{editable: true}",
          "computed": false
        }
      },
      "loadFigure": {
        "type": {
          "name": "objectOf",
          "value": {
            "name": "any"
          }
        },
        "required": false,
        "description": "{data, layout, frames} given to the chart, used to populate selections and chart when loading"
      },
      "logoSrc": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Logo that will be displayed in the chart editor"
      },
      "logoStyle": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style object of the Logo"
      },
      "structureOptions": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "shape",
              "value": {
                "traces": {
                  "name": "bool",
                  "required": false
                },
                "subplots": {
                  "name": "bool",
                  "required": false
                },
                "transforms": {
                  "name": "bool",
                  "required": false
                }
              }
            }
          ]
        },
        "required": false,
        "description": "Options that drive the available options under the \"Structure\" tree",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "styleOptions": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "shape",
              "value": {
                "general": {
                  "name": "bool",
                  "required": false
                },
                "traces": {
                  "name": "bool",
                  "required": false
                },
                "axes": {
                  "name": "bool",
                  "required": false
                },
                "maps": {
                  "name": "bool",
                  "required": false
                },
                "legend": {
                  "name": "bool",
                  "required": false
                },
                "colorBars": {
                  "name": "bool",
                  "required": false
                }
              }
            }
          ]
        },
        "required": false,
        "description": "Options that drive the available options under the \"Style\" tree",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "annotateOptions": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "shape",
              "value": {
                "text": {
                  "name": "bool",
                  "required": false
                },
                "shapes": {
                  "name": "bool",
                  "required": false
                },
                "images": {
                  "name": "bool",
                  "required": false
                }
              }
            }
          ]
        },
        "required": false,
        "description": "Options that drive the available options under the \"Annotate\" tree",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "controlOptions": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "shape",
              "value": {
                "sliders": {
                  "name": "bool",
                  "required": false
                },
                "menus": {
                  "name": "bool",
                  "required": false
                }
              }
            }
          ]
        },
        "required": false,
        "description": "Options that drive the available options under the \"Control\" tree",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "traceOptions": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "List of trace options to display"
      },
      "saveState": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When passed True, this will save the current state of the grid to `figure`",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the input changes"
      }
    }
  }
}